2021-12-23 Thur
1.  프로젝트 계획서 작성
2.  팀 역할분담
    - 김민철(팀장): 인공지능 모델 설계 및 구현, GUI 구현, 통합테스트 진행
    - 서보권(팀원): 데이터 수집, 데이터 전처리, 단위테스트 진행
    - 김영준(팀원): 데이터 수집, 데이터 전처리, 발표자료 준비
3.  깃(Git) 개설
4.  개발환경 정의
    

2021-12-24 Fri
1.  개발환경 구축
    * 자세한 라이브러리는 향후 requirements.txt로 배포 예정
    - Python        3.7
    - pandas        1.3.4
    - matplotlib    3.5.0
    - scikit-learn  1.0.1
    - tensorflow    2.1.0
    - selenium      3.141.0
    - numpy         1.19.2
    - pyqt5         5.9.2
2.  데이터 풀 탐색
3.  데이터 수집 범위 지정
4.  데이터 분석


2021-12-27 Mon
1.	NaN값 제거 과정(전남)
2.	NaN값이 제거된 데이터들 전량검수 (무결성 확인절차)
3.	NaN값이 제거된 데이터프레임의 컬럼 재정의.
	- 일시(datetime), 평균기온(avg_temp), 최저기온(min_temp), 최고기온(max_temp) 총 4개의 컬럼으로 재정의


2021-12-28 Tue
1.	학습 데이터셋 구성을 위한 전처리 과정 진행
	- 데이터 스케일링		(range 0 to 1)
	- 시퀀스 데이터 생성
	- 학습 데이터 셋 생성
2.	LSTM 기반 인공지능 모델 구현 및 학습 진행
	- 자세한 내용은 models_history.txt 파일을 참조.
3.	학습이 완료된 인공지능 모델에 테스트 데이터를 이용하여 예측값 확인
	- 자세한 내용은 models_history.txt 파일을 참조.


2021-12-29 Wed
1.	LSTM 기반 인공지능 모델 성능 강화
	- 다양한 Layer와 과적합 방지 정책을 조절하여 최적의 모델 생성을 위한 다양한 시도를 하였음
	- 현재까지 확인된 바로는 전처리 과정에서 설정한 주기값이 모델 성능에 큰 영향을 미치지 않는다는 것을 확인하였음.
	- 전처리 과정보다 모델 네트워크 및 파라미터 조정을 통한 성능향상에 초점을 두고 있음.
2.	스크립트 자동화
	- 모델의 개체수(약 100개)가 너무 많아서 일일이 수작업으로 진행하기 어려워 자동화 시켰음.
3.	인공지능 모델 네트워크 및 파라미터 최종 결정
	- Period: 30 (days)
	- Dataset-ratio: train(85%), test(15%)
	- Network: LSTM(256) - Drop(0.3) - LSTM(128) - Drop(0.2) - LSTM(64) - Drop(0.2) - LSTM(32) - Drop(0.1) - Flatten - Dense(3)
	- Loss-func: MSE(Mean squere error)
	- Optimizer: Adam
	- Parameters: 525,283
	- Epochs: 100
	- Runtime
		NVIDIA GeForce RTX 3060 Ti 8GB    1314.061 seconds
		NVIDIA GeForce GTX 1060 3GB	      3436.794 seconds
		Intel(R) Iris(R) Xe Graphics    	4177.385 seconds


2021-12-30 Thur
1.	개발 환경 재구성
	- 텐서플로우(tensorflow) 버전 이슈로 정상적으로 학습이 되지 않는 현상 발생
	- 텐서플로우 버전 2.1.0 -> 2.3.0 업그레이드
	- 이에 따라오는 각종 패키지들이 버전 충돌을 일으켜 부득이 개발 환경을 재구성하였음.
2.	인공지능 모델 학습
	- 100개의 지역 중 23개 학습 완료.
	- 일부 지역은 학습 시 loss가 NaN이 되는 현상을 발견하여 전처리 데이터 조사 중에 있음.
3.	애플리케이션 초안 구성
	- 기능 정의서 작성 완료
	- 스케치 도안 구상 완료
4.	학습이 완료된 모델에 한해서 모델 단위테스트 진행 중
	- 평균적으로 오차는 -2 ~ 2도 사이에 수렴함.
	- 기온값으로만 학습을 하였기 때문에, 기온 변화에 영향을 주는 환경요소를 추가할 경우 더 뛰어난 퍼포먼스를 기대할 수 있음.


2021-12-31 Fri
1.	인공지능 모델 학습
	- 100개 지역 중 65개 학습 완료.
	- 일부 지역의 loss 값이 NaN이 되는 현상 원인을 발견, 수정 하였음.		(시퀀스 데이터를 만드는 과정에서 오류 발생)
2.	애플리케이션 구현
	- 위젯 옵션, 위젯 오브젝트 배치 등 기초 프레임 구현 완료
	- 각 오브젝트별로 이벤트 스크립트 작성
3.	발표자료 준비
4.	인공지능 모델 성능 검증


2022-01-03 Mon
1.	애플리케이션 구현
	- 웹으로부터 최근 30일의 데이터를 크롤링하여 데이터셋을 구성하고 이 데이터셋을 모델의 predict에 주기위한 프레임워크 구현
	- 지역마다 인공지능 모델 및 스케일러 파일이 다르기때문에 이를 유념해서 매핑 작업 중
2.	발표자료 준비
3.	인공지능 모델 성능 검증(예측값과 실측값의 오차 비교)을 통한 예측 성능 지표 생성


2022-01-04 Tue
1.  애플리케이션 차트 기능 추가
    - 예측에 사용된 실제 값과 예측 값을 그래프로 피팅
    - 사용자에게 좀 더 직관적인 결과를 시각적으로 제공
2.  애플리케이션 최적화
    - 인공지능 모델에 데이터 입력 및 피팅 테스트
    - 일부 행동에 대해 애플리케이션이 강제로 종료되는 현상 수정
      -> 정확한 원인은 밝혀지지 않았으며, 예외처리로 해당 이벤트는 실행하지 않도록 변경
3.  발표자료 
